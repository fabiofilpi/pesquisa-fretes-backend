# Endpoints protegidos (por padrão) e públicos
quarkus.http.auth.permission.public.paths=/hello
quarkus.http.auth.permission.public.policy=permit
quarkus.http.auth.permission.protected.paths=/api/*
quarkus.http.auth.permission.protected.policy=authenticated
# Chave pública usada para validar a assinatura do JWT
mp.jwt.verify.publickey.location=classpath:publicKey.pem
mp.jwt.verify.issuer=pesquisa-fretes
# Para assinar sem precisar passar o caminho no código:
smallrye.jwt.sign.key.location=classpath:privateKey.pem
# Habilita o CORS (novo)
quarkus.http.cors.enabled=true
quarkus.http.cors.origins=http://localhost:5173
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Authorization,Content-Type,X-Requested-With
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.cors.exposed-headers=Set-Cookie
mp.jwt.token.header=Cookie
mp.jwt.token.cookie=access_token
# (opcional) Se quiser que ele também cheque Authorization quando não houver cookie
smallrye.jwt.always-check-authorization=true
# Tipo do banco
quarkus.datasource.db-kind=postgresql
# URL de conexão (ajuste host se não for localhost)
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/meubanco
# Credenciais
quarkus.datasource.username=admin
quarkus.datasource.password=admin123
# Geração do schema
quarkus.hibernate-orm.schema-management.strategy=update
# Logar SQL (opcional)
quarkus.hibernate-orm.log.sql=true
# Base URL do cliente da Climario
quarkus.smallrye-graphql-client.climario.url=https://www.climario.com.br/_v/segment/graphql/v1